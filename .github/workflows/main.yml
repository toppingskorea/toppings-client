# This is a basic workflow to help you get started with Actions

name: CD Docker

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["xxx"]

env:
  DOCKER_IMAGE: ghcr.io/toppingskorea/toppings-client
  VERSION: ${{ github.sha }}
  NAME: toppings-client

jobs:
  build:
    name: Build
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Setting .env for firebase
        run: |
          echo "NEXT_PUBLIC_KAKAO_JAVASCRIPT_KEY=${{ secrets.NEXT_PUBLIC_KAKAO_JAVASCRIPT_KEY }}" >> .env
          echo "NEXT_PUBLIC_REDIRECT_URI=${{ secrets.NEXT_PUBLIC_REDIRECT_URI }}" >> .env
          echo "NEXT_PUBLIC_SENTRY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}" >> .env
          echo "NEXT_PUBLIC_TOPPINGS_TOKEN_KEY=${{ secrets.NEXT_PUBLIC_TOPPINGS_TOKEN_KEY }}" >> .env
          echo "NEXT_PUBLIC_TOPPINGS_SERVER_URL=${{ secrets.NEXT_PUBLIC_TOPPINGS_SERVER_URL }}" >> .env
          echo "NEXT_PUBLIC_JWT_SECRET_KEY=${{ secrets.NEXT_PUBLIC_JWT_SECRET_KEY }}" >> .env
          echo "NEXT_PUBLIC_GOOGLE_ANALYTICS_TRACKING_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS_TRACKING_ID }}" >> .env
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-go]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run
        run: |
          pwd
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -itd --name ${{ env.NAME }} -e VIRTUAL_HOST=dev.toppings.co.kr --restart always ${{ env.DOCKER_IMAGE }}:latest
